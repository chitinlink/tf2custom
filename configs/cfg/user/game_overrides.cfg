-attack // turn off +attack if its on for some reason
crosshair 1 // enable the crosshair if it was off for some reason

////.DEFAULT.SETTINGS...............................................................................
//// if you want these settings to vary based on class, add them to their (class)_c.cfg
////................................................................................................
fov_desired 90 // default ingame fov (70-90)
viewmodel_fov 70 // default viewmodel fov (0.1-179)
r_drawviewmodel 1 // draw viewmodel by default? (0-1)
//sensitivity 1 // default sensitivity (multiples of 1)
// damage numbers color default
// https://duckduckgo.com/?q=color+picker --> get the color you want by taking the R, G, B values
// from this color picker
hud_combattext_red 20
hud_combattext_green 255
hud_combattext_blue 0
//// crosshair defaults
// color
// cl_crosshair_red 255
// cl_crosshair_green 255
// cl_crosshair_blue 64
cl_crosshair_red 255
cl_crosshair_green 255
cl_crosshair_blue 255
// scale (size)
// cl_crosshair_scale 18 // small crosshair (default is 32)
// type
// cl_crosshair_file crosshair5 // crosshair type
// crosshair values:
// * ""         - this will give you the ´default´ crosshair which changes depending on weapon
// * crosshair1 - centered dot with horizontal and vertical lines apart from it
// * crosshair2 - same as above except without the line above the dot
// * crosshair3 - hollow circle
// * crosshair4 - cross
// * crosshair5 - full circle
// * crosshair6 - same as 1 but with no dot
// * crosshair7 - horizontal and vertical lines running across center, forming a ´+´
// * default    - dot with two arcs left and right of it (´wings´)

cl_crosshair_file ""
cl_crosshair_scale 32

////.ALIASES........................................................................................
//// in this section we define custom actions that are then bound to keys further down this file
////................................................................................................

// display console+fps on +scoreboard
// bind <key> "+scoreboard"
alias +scoreboard "+showscores; cl_showfps 1; developer 1; cl_showerror 1; net_graph 2; mem_compact"
alias -scoreboard "-showscores; cl_showfps 0; developer 0; cl_showerror 0; net_graph 1; mem_compact"
alias +scoreboard "+showscores; cl_showfps 1; developer 1; cl_showerror 1"
alias -scoreboard "-showscores; cl_showfps 0; developer 0; cl_showerror 0"

// null-cancelling movement script
// this prevents you from pressing two opposing directions, which causes you to stop moving
// https://web.archive.org/web/20191124005113/http://ozfortress.com/showpost.php?p=624355
// alias +mf  "-back;      +forward;   alias cfwd   +forward"
// alias +mb  "-forward;   +back;      alias cback  +back"
// alias +ml  "-moveright; +moveleft;  alias cleft  +moveleft"
// alias +mr  "-moveleft;  +moveright; alias cright +moveright"
// alias -mf  "-forward;   cback;      alias cfwd   none"
// alias -mb  "-back;      cfwd;       alias cback  none"
// alias -ml  "-moveleft;  cright;     alias cleft  none"
// alias -mr  "-moveright; cleft;      alias cright none"
// alias cfwd   none
// alias cback  none
// alias cleft  none
// alias cright none

// crouchjump
// like jumping but you crouch immediately after
// crouchjumping grants you +1hu of total vertical movement and also reduces your hitbox by
// 27hu from the bottom, allowing you to reach slightly highter surfaces and evade enemy fire.
// you can do this manually and it will have the exact same effect, ie, you dont need this alias.
// https://wiki.teamfortress.com/wiki/Jumping#Crouch-jumping
// bind <key> "+crouchjump"
alias +crouchjump "+jump; +duck"
alias -crouchjump "-duck; -jump"

// panic; spin very fast
// bind <key> "+panic"
alias "+panic" "cl_yawspeed 800; +left"
alias "-panic" "-left; cl_yawspeed 210"

////.BINDS..........................................................................................
//// here we set what keys do what. this is essentially an alternative to the Options menu
////................................................................................................

//// basics
bind "MOUSE1" "+attack" // left click
bind "MOUSE2" "+attack2" // right click
bind "MOUSE3" "+attack3" // middle click
bind "MOUSE5" "impulse 201" // spray on mouse forward button

// binding both scroll buttons to jump means if you want to bunnyhop you only need to roll the
// scrollwheel.
bind "MWHEELUP" "+jump" // scrollwheel up
bind "MWHEELDOWN" "+jump" // scrollwheel down

// weapon slots. some of these are unused in all classes (i think?) and some of these are only used
// in some classes. for that reason you can bind slot 4 to something else on scout, for example.
bind "1" "slot1" // primary weapon   - all classes
bind "2" "slot2" // secondary weapon - all classes
bind "3" "slot3" // melee weapon     - all classes
bind "4" "slot4" // spy and engineer
bind "5" "slot5" // engineer
bind "6" "slot6" // grappling hook (not a normal thing to have unless you play mannpower)
bind "7" "slot7" // none
bind "8" "slot8" // none
bind "9" "slot9" // none
// // bind none "slot0" // none

// generally the close button on sourcemod menus, having this unbound generally means those menus
// can stay oncreen for a long time, or forever
bind "0" "menuselect 10"

//// movement
bind "w" "+mf" // move forward
bind "a" "+ml" // move left
bind "s" "+mb" // move backward
bind "d" "+mr" // move right
bind "SPACE" "+jump" // jump on spacebar -- jumps move your character by 45hu up

// i have crouch bound to both of these because i like both
bind "CTRL" "+duck" // crouch on left control key
bind "SHIFT" "+duck" // crouch on left shift key

bind "ALT" "+crouchjump" // crouchjump on alt

bind "RALT" "+strafe" // strafe modifier on right alt (alt gr)
// (this is a legacy key youre not actually expected to use but i like it because it lets you move
//  very slowly using your mouse and thus do some precise positioning)

//// comms
bind "e" "voicemenu 0 0; +use" // call for medic and try to +use (just in case)
bind "y" "say" // chat
bind "u" "say_team" // team-restricted chat
// // bind none "say_party" // open party chat (i personally dont use this)
bind "z" "voice_menu_1" // voice menu 1
bind "x" "voice_menu_2" // voice menu 2
bind "c" "voice_menu_3" // voice menu 3
bind "v" "+voicerecord" // voice chat (usually team-restricted)

//// gameplay
bind "q" "lastinv" // switch to last used weapon
bind "TAB" "+scoreboard" // open scoreboard, and do some other things. change to ´+showscores´ to disable the other things
bind "r" "+reload" // reload. used by the vaccinator
bind "h" "+use_action_slot_item" // use dueling minigame, spell, power canteen
bind "b" "lastdisguise" // put on last disguise, or use currently held slot weapon for your current disguise
// bind none "disguiseteam" // change disguise kit team on dash
bind "f" "+inspect" // inspect your weapon, or someone else
bind "l" "dropitem" // drop intel, or passtime jack. probably something else i dont know about
bind "," "changeclass" // change classes on comma
bind "." "changeteam" // change team on period
bind "t" "incrementvar r_drawviewmodel 0 1 1" // toggle weapon viewmodel on/off
bind "g" "+taunt" // taunt, or taunt menu if you have more than one equipped
bind "p" "kill" // instantly die (same effect as ´explode´)
bind "j" "cl_trigger_first_notification" // accept notification
bind "k" "cl_decline_first_notification" // decline notification
bind "m" "open_charinfo_direct" // open loadout screen
bind "KP_PLUS" "+panic" // rotate fast on keypad +
// bind none "open_charinfo_backpack" // open backpack
bind "KP_INS"       "load_itempreset 0" // switch to loadout A
bind "KP_END"       "load_itempreset 1" // switch to loadout B
bind "KP_DOWNARROW" "load_itempreset 2" // switch to loadout C
bind "KP_PGDN"      "load_itempreset 3" // switch to loadout D
// buttons 0,1,2,3 in the keypad are bound to loadouts A,B,C,D respectively. press these buttons in
// spawn and you should respawn with the loadout you want. this has the exact same effect as
// touching the resupply cabinet
bind "i" none
// this button stays unbound by default because im reserving it for class-specific actions, such as
// toggling the spys auto-disguise on attack.

//// technical
bind "\" "toggleconsole" // toggle the console on ´\´
bind "`" "toggleconsole" // and also ´`´ because thats on the english keyboard i guess
bind "KP_MULTIPLY" "ds_mark" // demo recorder bookmark on ´*´ in the keypad

//// other
bind "ESCAPE" "cancelselect" // exit out of a lot of menus
bind "F1" none // read note below this section
bind "F2" "show_quest_log" // open contracts drawer, also vote ´no´ on server voting
bind "F3" "askconnect_accept" // accept servers request to send you to another server.
bind "F4" "player_ready_toggle" // ´ready up´ in MVM
bind "F5" none // read note below this section
bind "F6" "save_replay" // save replay (note: replays are largely unused)
bind "F7" "abuse_report_queue" // report button (wait for the dialog)
bind "F10" "quit prompt" // quits the game on a prompt
bind "F12" none // this does nothing so you can safely use F12 for steam screenshots

// NOTE: keys F1 to F5 are always used for server voting, regardless of what you have them bound to,
//  but you can still use them for other things. keep in mind any binds you might set for those keys
//  might get in the way when voting. keys F1 and F2 are the most used, as they correspond to ´yes´
//  and ´no´ votes respectively, whereas F3, F4, and F5 only come up in map voting.
//  https://wiki.teamfortress.com/wiki/Voting#Client_commands

//// debug
// we dont touch the o key so it can be used between runs of this file, for debugging, etc.
// for example, if you set this to "noclip" in the console, it will continue to be the noclip key
// after the next time you run reset.cfg, and even after you restart tf2
// // // bind "o" none

//// obscure/weird/unused keys that could probably be used for something else or that im unaware are actually useful
// worth noting: tf2 parses some keys on my keyboard (european/portuguese keyboard layout) wrong. probably does so
// on other layouts as well. check what it's actually parsing by using the options menu in tf2
bind "'" none
bind "]" none // NOTE: this is ´«´ on my keyboard
bind "n" none
bind "/" none
bind "=" none
bind "[" none
bind "-" none
bind "F9" none
bind "F11" none
bind "MOUSE4" none
bind "PAUSE" none
bind "SEMICOLON" none
bind "CAPSLOCK" none
bind "RSHIFT" none
bind "PGDN" none
bind "PGUP" none
bind "END" none
bind "INS" none
bind "KP_SLASH" none
bind "KP_DEL" none
bind "KP_LEFTARROW" none
bind "KP_RIGHTARROW" none
bind "KP_UPARROW" none
bind "KP_HOME" none
bind "KP_PGUP" none
bind "KP_5" none
bind "KP_MINUS" none
bind "KP_ENTER" none
